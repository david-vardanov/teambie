generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      UserRole @default(EMPLOYEE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  events    Event[]
}

enum UserRole {
  ADMIN
  EMPLOYEE
}

model Employee {
  id                    Int       @id @default(autoincrement())
  name                  String
  email                 String    @unique
  startDate             DateTime
  vacationDaysPerYear   Int       @default(28)
  holidayDaysPerYear    Int       @default(14)
  archived              Boolean   @default(false)
  archivedAt            DateTime?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  events                Event[]
}

model Event {
  id          Int       @id @default(autoincrement())
  employeeId  Int?
  employee    Employee? @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  type        EventType
  startDate   DateTime
  endDate     DateTime?
  notes       String?
  isGlobal    Boolean   @default(false)
  moderated   Boolean   @default(false)
  createdById Int?
  createdBy   User?     @relation(fields: [createdById], references: [id], onDelete: SetNull)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([employeeId])
  @@index([startDate])
  @@index([createdById])
}

enum EventType {
  VACATION
  HOLIDAY
  SICK_DAY
  LATE_LEFT_EARLY
  DAY_OFF_PAID
  DAY_OFF_UNPAID
  HOME_OFFICE
  START_WORKING
  PROBATION_FINISHED
  LAST_DAY
}
